workflows:
  version: 2
  build_circleci:
    jobs:
      - build
      - test:
          requires:
            - build
      - back-deploy-heroku:
          requires:
            - build
      - docker-build-and-push:
          requires:
            - back-deploy-heroku

version: 2
jobs:
  build:
    docker:
      - image: circleci/python:latest
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/prod.txt" }}
            - v3-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt
          environment:
            CONDUIT_SECRET: 'something-really-secret'
            FLASK_APP: /home/circleci/repo/autoapp.py
            FLASK_DEBUG: 1

      - save_cache:
          paths:
            - venv
          key: v3-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/prod.txt" }}

  test:
    docker:
      - image: circleci/python:latest
      - image: postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: myUser  
          POSTGRES_PASSOWRD: somePwd 
          POSTGRES_DB: mydb

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/prod.txt" }}
            - v3-dependencies-
      - run:
          name: bd upgrade 
          command: |
            . venv/bin/activate
            sleep 1
            flask db upgrade
          environment:
            CONDUIT_SECRET: 'something-really-secret'
            FLASK_APP: /home/circleci/repo/autoapp.py
            DATABASE_URL: postgresql://myUser:somePwd@localhost:5432/mydb
            FLASK_DEBUG: 1
            POSTGRES_USER: myUser
            POSTGRES_DB: mydb
            POSTGRES_PASSWORD: somePwd
            POSTGRES_PORT: 5432

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            flask db migrate
            flask test  
          environment:
            CONDUIT_SECRET: 'something-really-secret'
            FLASK_APP: /home/circleci/repo/autoapp.py
            DATABASE_URL: postgresql://myUser:somePwd@localhost:5432/mydb
            FLASK_DEBUG: 1
            POSTGRES_USER: myUser
            POSTGRES_DB: mydb
            POSTGRES_PASSWORD: somePwd
            POSTGRES_PORT: 5432

      - save_cache:
          paths:
            - venv
          key: v3-dependencies-{{ checksum "requirements/dev.txt" }}-{{ checksum "requirements/prod.txt" }}

  back-deploy-heroku:
   docker:
      - image: buildpack-deps:trusty
   steps:
      - checkout
      - run:
          name: Heroku Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git origin/main
      
  docker-build-and-push:
    working_directory: /dockerapp
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: build app  for docker
          command: |
            docker build --cache-from=app -t app .
      - deploy:
          name:  publish the app on my docker hub

          command: |
            docker login -e $DOCKER_HUB_EMAIL -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag app $DOCKER_HUB_USER_ID/devops_backend:$CIRCLE_BUILD_NUM
            docker tag app $DOCKER_HUB_USER_ID/devops_backend:latest
            docker push $DOCKER_HUB_USER_ID/devops_backend:$CIRCLE_BUILD_NUM
            docker push $DOCKER_HUB_USER_ID/devops_backend:latest